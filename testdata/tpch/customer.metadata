hive> describe customer;
OK
c_custkey	int	
c_name	string	
c_address	string	
c_nationkey	int	
c_phone	string	
c_acctbal	double	
c_mktsegment	string	
c_comment	string	

redfile-reader --values_per_data_page=0 --file=../redfile/testdata/tpch/customer
File Length: 26635714
Metadata offset: 518
FileMetaData {
  01: version (i32) = 1,
  02: schema (list) = list<struct>[8] {
    [0] = SchemaElement {
      01: type (i32) = 1,
      02: field_type (i32) = 1,
      03: name (string) = "c_custkey",
    },
    [1] = SchemaElement {
      01: type (i32) = 6,
      02: field_type (i32) = 1,
      03: name (string) = "c_name",
    },
    [2] = SchemaElement {
      01: type (i32) = 6,
      02: field_type (i32) = 1,
      03: name (string) = "c_address",
    },
    [3] = SchemaElement {
      01: type (i32) = 1,
      02: field_type (i32) = 1,
      03: name (string) = "c_nationkey",
    },
    [4] = SchemaElement {
      01: type (i32) = 6,
      02: field_type (i32) = 1,
      03: name (string) = "c_phone",
    },
    [5] = SchemaElement {
      01: type (i32) = 5,
      02: field_type (i32) = 1,
      03: name (string) = "c_acctbal",
    },
    [6] = SchemaElement {
      01: type (i32) = 6,
      02: field_type (i32) = 1,
      03: name (string) = "c_mktsegment",
    },
    [7] = SchemaElement {
      01: type (i32) = 6,
      02: field_type (i32) = 1,
      03: name (string) = "c_comment",
    },
  },
  03: num_rows (i64) = 150000,
  04: row_groups (list) = list<struct>[1] {
    [0] = RowGroup {
      01: columns (list) = list<struct>[8] {
        [0] = ColumnChunk {
          02: file_offset (i64) = 620084,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 1,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_custkey",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 620080,
            07: total_compressed_size (i64) = 620080,
            08: data_page_offset (i64) = 4,
          },
        },
        [1] = ColumnChunk {
          02: file_offset (i64) = 3964894,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 6,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_name",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 3344770,
            07: total_compressed_size (i64) = 3344770,
            08: data_page_offset (i64) = 620124,
          },
        },
        [2] = ColumnChunk {
          02: file_offset (i64) = 8370312,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 6,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_address",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 4405376,
            07: total_compressed_size (i64) = 4405376,
            08: data_page_offset (i64) = 3964936,
          },
        },
        [3] = ColumnChunk {
          02: file_offset (i64) = 8990438,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 1,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_nationkey",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 620080,
            07: total_compressed_size (i64) = 620080,
            08: data_page_offset (i64) = 8370358,
          },
        },
        [4] = ColumnChunk {
          02: file_offset (i64) = 11884350,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 6,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_phone",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 2893866,
            07: total_compressed_size (i64) = 2893866,
            08: data_page_offset (i64) = 8990484,
          },
        },
        [5] = ColumnChunk {
          02: file_offset (i64) = 13105788,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 5,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_acctbal",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 1221394,
            07: total_compressed_size (i64) = 1221394,
            08: data_page_offset (i64) = 11884394,
          },
        },
        [6] = ColumnChunk {
          02: file_offset (i64) = 15097348,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 6,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_mktsegment",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 1991514,
            07: total_compressed_size (i64) = 1991514,
            08: data_page_offset (i64) = 13105834,
          },
        },
        [7] = ColumnChunk {
          02: file_offset (i64) = 26635150,
          03: meta_data (struct) = ColumnMetaData {
            01: type (i32) = 6,
            02: encodings (list) = list<i32>[1] {
              [0] = 0,
            },
            03: path_in_schema (list) = list<string>[1] {
              [0] = "c_comment",
            },
            04: codec (i32) = 0,
            05: num_values (i64) = 150000,
            06: total_uncompressed_size (i64) = 11537753,
            07: total_compressed_size (i64) = 11537753,
            08: data_page_offset (i64) = 15097397,
          },
        },
      },
      02: total_byte_size (i64) = 26634833,
      03: num_rows (i64) = 150000,
    },
  },
}
Reading row group 0
  Reading column 0
  Reading column 1
  Reading column 2
  Reading column 3
  Reading column 4
  Reading column 5
  Reading column 6
  Reading column 7

Summary:
  Rows: 150000
  Read pages: 3229
  Skipped pages: 0
  Metadata size: 510(1.91472e-05)
  Total page header size: 56386(0.00211693)
  Column byte sizes: 26578447(0.99785)
    Col 0: 618750(0.0232301)
    Col 1: 3337500(0.125302)
    Col 2: 4395767(0.165033)
    Col 3: 618750(0.0232301)
    Col 4: 2887587(0.10841)
    Col 5: 1218750(0.0457562)
    Col 6: 1987214(0.0746071)
    Col 7: 11514129(0.432282)
